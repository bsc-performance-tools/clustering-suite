ChangeLog 'ClusteringSuite'

YYYY-MM-DD  John Doe  <johndoe@example.com>

	* myfile.ext (myfunction): my changes made
	additional changes

	* myfile.ext (unrelated_change): my changes made
	to myfile.ext but completely unrelated to the above

	* anotherfile.ext (somefunction): more changes

2015-01-08 German Llort <german.llort@bsc.es>
	* Added support for TDBSCAN to be launched using the back-end attach mode.

2014-12-17 German Llort <german.llort@bsc.es>
	* Changed the way the final DATA.csv is generated in TreeDBSCAN.
	Now we run an external script that merges the files.

2014-12-15 German Llort <german.llort@bsc.es>
	* Added scripts tdbscan-mass-submit and tdbscan-process-results, 
	to submit experiments to the system queue and parse the results

	* Fixed bug in tdbscan-launcher when parsing the environment to 
	detect known system managers

	* Fixed bug in tdbscan-launcher when parsing the available resources
	to generate the topology

	* Fixed paths of the files that are generated in the experiments scripts 
	so that the outputs are generated in the current directory

2014-12-11 German Llort <german.llort@bsc.es>
	* Added support for BlueWaters' PBS system manager in
	tdbscan-launcher.py

2014-12-11 German Llort <german.llort@bsc.es>
	* Modified script tdbscan-sweep to run the same experiment several times

	* Added new statistics to the final report of tdbscan-sweep, and make averages of all backends 

	* Fixed bug in tdscan-launcher when parsing the hostfile from the LSF system manager

2014-12-10 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Solved a bug in 'ClusteredStatesPRVGenerator' that caused a duplicity
	of the clusters opening event

	* Fixed a regression in 'TraceData' when using 'CompleteBursts' and
	'ClusteringBursts', that broke the correct behaviour of the 'BurstClustering'
	application

2014-12-10 German Llort <german.llort@bsc.es>
	* Added suffix .sh to the wrapper scripts BurstClustering and ClustersSequenceScore 
	to avoid compilation problems.

	* TDBSCAN now prints timing statistics 

	* Added a sweep script to run multiple TDBSCAN experiments

2014-12-04 German Llort <german.llort@bsc.es>
	* Changed obsolete macro AM_PROG_CC_STDC to AC_PROG_CC in
	configure.ac.template

	* Initial steps to improve the adaption of MinPoint values at different
	tree levels

	* Solved a bug in hull intersection density calculation

	* Added 'tdbscan-launcher' script ease the offline TreeDBSCAN execution

	* Updated time measurements accross TreeDBSCAN implementation

	* Moved 'AnalyzeData' method from WorkerOffline & Online to the
	generic Worker class

	* Solved a bug in CSVDataExtractor that do not avoid comment lines
	starting with '#'

2014-11-26 Juan Gonzalez <juan.gonzalez@bsc.es> 
	* Solved a bug in the data normalization that caused incorrect results
	when using the TreeDBSCAN in offline mode. Now, if you invoke 
	'Normalize' method into 'TraceData' class without parameters in a
	'distributed' context, it does not modify the data

	* Unification of the 'NewBurst' methods in 'TraceData' class, so as
	to mantain a single code

	* The management of Clustering/Complete/All Bursts vectors in the
	TraceData class are clear (CompleteBursts are only stored by the 'root
	worker'). All trasnformations in 'libDistributedClusteringImplementation'
	act on the ClusteringBursts, with the exception of the trace
	reconstruction, which generates a new partition (TraceReconstructionPartition)
	that refers to CompleteBursts.

2014-11-25 Juan Gonzalez <juan.gonzalez@bsc.es> - 2.6.3
	* Added wrapping scripts to invoke the different binaries, so as to 
	minimize the possible conflicts related to dynamic libraries

2014-11-24 German Llort <german.llort@bsc.es>
	* Fixed the offline version of the TreeDBSCAN 

2014-11-21 Juan Gonzalez <juan.gonzalez@bsc.es> 
	* Fixed a minimum regression in 'libDistributedClusteringImplementation',
	to ensure that all backends on the TreeDBSCAN implementation are able
	to correctly assign the IDs to each local points

2014-11-15 Juan Gonzalez <juan.gonzalez@bsc.es> - 2.6.3 (FAILED)
	* Polished the building system. It didn't work properly when compiling
	without Tree DBSCAN support due to the spaces in 'test' operation
	comparison. Solution seen in:

	https://lists.gnu.org/archive/html/automake/2011-09/msg00001.html

	* Corrected TDBSCAN link generation to be agnostic from $(bindir) in
	the building system

2014-10-31 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Solved the generation of 'TDBSCAN_env.sh' LD_LIBRARY_PATH variable (now
	it uses CLUSTERING_LD_LIBRARY_PATH, created at configure.ac) 

2014-10-09 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Huge changes in the building system to maximize the use of 'rpaths'

2014-08-29 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added new 'boost.m4' release

2014-08-28 Juan Gonzalez <juan.gonzalez@bsc.es> - 2.6.2
	* Corrected 'Initiliaze' of ClusteringConfiguration from the TreeDBSCAN
	side to match the new definitions

	* Added a new implementation of 'NewBurst' on 'TraceData' to avoid
	changes in the TreeDBSCAN side

	* Release to update the Extrae 3.0 compatibility

2014-08-28 German Llort <german.llort@bsc.es>
	* Edited debug messages in TreeDBSCAN

2014-06-06 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Solved a bug in 'ClusteredStatesPRVGenerator.cpp' when opening
	a burst region, that caused the duplication of the burst opening
	events in the output trace

2014-05-28 Juan Gonzalez <juan.gonzalez@bsc.es> - 2.6.1
	* Commit of the release 2.6.1

	* Changes in the autotools files, to ensure the distribution of the
	example and the documentation

2014-05-23 Juan Gonzalez <juan.gonzalez@bsc.es> 
	* Added 'example' and 'doc' folders and contens (example traces and
	XMLs and documentation sources)

	* In the different PRV trace generators .cpp files, added the Missing
	Data entry to the CLUSTERS_EVENTS_TXT define (that shouldn't be too
	replicated as it is now)	

2014-03-20 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added the original K-means implementation source files 'asa136.*'

2014-02-03 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Commit of the 2.6.0 release

2013-09-04 Juan Gonzalez <juan.gonzalez@bsc.es>
	* First commit adding the 'PRVSemanticGuidedDataExtractor' files

2013-09-30 German Llort <german.llort@bsc.es>
	* Latest advances in 'TreeDBSCAN'

2013-09-30 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Latest advances in 'libDistributedClustering'. Pretty unstable :D

2013-07-03 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added 'pcfparser' to the repository

	* Update of 'boost.m4' macros file from 'https://github.com/tsuna/boost.m4'

2013-05-27 Juan Gonzalez <juan.gonzalez@bsc.es> - 2.5.2
	* Changed the metrics names in the 'DATA.csv' file. Now the raw
	clustering metrics are preceeded by 'd_', the normalized clustering
	metrics are preceeded by 'n_' and the extrapolation/averaged metrics
	are preceeded by 'x_'.

	* In the 'clusters_info.csv' file, noise cluster is always present
	including when it does not contain any individual.
	

2013-05-08 Juan Gonzalez <juan.gonzalez@bsc.es> - 2.5.1
	* Solved a bug in the states parsing that provoke an initial event
	outside a burst to be wrongly accounted into the next running burst

2013-05-06 Juan Gonzalez <juan.gonzalez@bsc.es> - 2.5.0
	* Changed Boost version checker to search for version >= 1.43

	* Added new event based parsing using the parameter '-ec <event_type>'.
	This parsing defines as a region any portion of the application 
	surrounded by the events with types indicated (as opposite to '-e'
	where it is required to check the event type and event value)

2013-04-16 Juan Gonzalez <juan.gonzalez@bsc.es> - 2.4.1
	* Solved a bug in the Aggregative Refinement that produced a
	crash when a cluster appeared aligned just with sequence gaps

	* Compilation not tested in IA64/PPC/PPC64

2013-04-10 Juan Gonzalez <juan.gonzalez@bsc.es> - 2.4.0
	* XML now can uses event labels instead of event values to define
	the clustering parameters

	* Added attribute "all_counters" to 'extrapolation_parameters'. If
	set to yes, the application generates all extrapolation parameters
	based on the hardware counters present on trace

	* These two features requires the existence of a PCF file with
	the same prefix of the input trace to translate the event labels
	or check the events present on the trace. To parse the PCF we
	use the 'pcfparser', part of the 'libtools' package. So far, the
	code of the parser is embedded in the directory 'pcfparse_svn1816'.
	
	It will be part of the new BSC 'ptools-common-files' package, to
	created soon.

2013-04-02 Juan Gonzalez <juan.gonzalez@bsc.es> - 2.3.5
	* Removed dependencies with 'common-files'. This package is now 
	integrated

	* Solved a bug in the tree levels naming

2013-03-01 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Solved bug 01.2013, that happened when all parameters have 0 ranges.

2012-09-14 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Solved a bug when storing 'AllBursts' read from a trace and
	not using a SQLite3

2012-08-19 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Minor changes in the 'SystemMessages' class to transform the
	progress visualization of 'status/total' messages to percentages
	to ease the visualization in the tree implementation

	* Correction to actually install the script 'sl_expand_nodelist.pl'
	in the installation 'bin' directory

2012-08-18 Juan Gonzalez <juan.gonzalez@bsc.es>
	* The insertion method in the bursts database now is managed as a 
	transaction, divided in three operations, BeginInserts+NewBurst+
	CommitInserts

	* Added the Perl script 'sl_expand_nodelist.pl' required in Sierra (not
	sure if it is required in other systems)

	* BackEnds end corruption still occurs.

2012-08-16 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Minor changes in the 'SystemMessages' class to improve the 
	TreeDBSCAN outputs

	* The tree implementation still has a memory leak difficult to 
	detect (a double free at the end of the BackEnds)

2012-08-14 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added a DB functionality using SQLite to avoid the memory bound on
	the MRNet tree based implementation: the master backend stores the
	whole collection of points in a file database, so as not to occupy
	all the memory avaible. The database management is encapsulated
	in the 'BurstsDB' class (BurstsDB.hpp|cpp). The availability check
	for an installation SQLite in the target system has been added
	to the building system

	* The addition of this database implied a major modification in
	almost all the classes that used the 'CompleteBursts' vector. Now
	this classes can iterate through a STL vector, but the inner 
	iteration is done by a template based member function. This is the
	only solution to both iterate through the database or an STL
	container

	* All the TreeDBSCAN source code by German Llort now uses the
	'system_messages' interface. It has been extended to add a prefix
	before the rank ID, to ease the legibility of the information
	when running the distributed version

	* Better support to CGAL in the building system

	* Upgraded minor version to 2.3, and added a REV under the minor 
	version (following the Paraver numbering)

2012-07-31 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added 64 bis offset file support on Linux (to correctly manage big
	traces)

	* Changed the behavior of the Cluster Refinement to always print the
	last sequences/sequence scores/tree. That implied a LOT of modifications
	to pass a boolean accross the different layers

2012-07-30 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Solved a bug in the Paraver trace parser to correctly treat empty
	lines

	* Solved a big memory leak in Paraver trace reconstructors, where all
	clustering events produced remained undeleted

2012-07-06 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Solved a bug in 'CSVDataExtractor': the burst duration was read
	incorrectly.

	* Improvements in the generation of alignment matrix on 'SequenceScore'.
	Now the kalign2 priorizes (even more) the alignment of 'big' clusters.

2012-07-05 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Changed 'configure.ac.template' to correctly generate distribution
	packages

2012-07-05 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Changed the random sampling in 'TraceData'. Previous version was buggy
	in 64 bit systems.

	* Changed the 'kalign2' building rules to just compile the files really
	used.

2012-07-03 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Full implementation of 'ClustersSequenceScore' as an independent binary.
	It does not use 'libTraceClustering' due to the bad integration of the
	CSV parser and the library.

	* First implementation of a 'CSVDataExtractor', just with basic features.
	It is a first (experimental) version that does not communicate with the
	Parameters Manager.

	* Erased remaing 'SeqAn' tags/calls/etc.

	* Added 'kalign2' calls to 'system_messages' class to correctly show the
	alignment progress.

	* Added 'system_messages' hooks to call percentage progress from C code.

2012-06-29 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Erased all references to SeqAn library in SequenceScore code. It is still
	pending the license problems of Kalign2

	* Updated the 'svn:keywords' to all new files in added to the package.

2012-06-28 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Major change in 'SequenceScore' algorithm. Remove use of SeqAn library.
	Embedded code of Kalign2 application. It is still experimental but
	lot faster than Muscle (the SeqAn MSA algorithm). The compilation still
	requires SeqAn because of the sequence containers.

	* Added new binary 'ClustersDiff' that compares two CSV cluster result
	files using the Mirkin Distance

	* Added prototypes for 'ClustersSequenceScore' isolated binary that loads
	a CSV cluster result file.

	* Added a CSVDataExtractor skeleton to extract data points from CSV cluster
	files (needed to 'ClustersSequenceScore', 'ClustersDiff' uses a simplistic
	CSV parser).


2012-06-12 German Llort <german.llort@bsc.es>
	* Changed the default datatype for the CGAL kernel

	* Checks for hulls having 3 points or more before trying to intersect them. 
	Hulls may have less than 3 points when the all points have the same value in one
	dimension, forming a line instead of a polygon which ends up crashing CGAL.

2012-02-27 German Llort <german.llort@bsc.es>
	* Added script draw_stats to print a DOT graph with each MRNet node statistics.

2012-02-27 German Llort <german.llort@bsc.es>
	* Changed the transmission protocol for hulls in Tree-DBSCAN algorithm so
	that all hulls are transmitted at once in a single package, rather than 
	one by one.

	* Added statistics to display the work done in each node of the MRNet tree.

2012-01-17 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Solved a bug in 'libTraceClusteringImplementation' related to PRV trace 
	reconstruction, when using events instead of states

2011-12-28 Juan Gonzalez <juan.gonzalez@bsc.>
	* Modification in the 'PlottingManager' to only add the 'basename' of the
	DataFileName to the GNUPlot scripts

	* Changes in the internal CGAL kernel to ensure the precision of the
	Hull operations (now, it uses a multiple precission data type offered by
	CGAL, plus an 'lazy' kernel). It is supposed to be more expensive than
	the previous implementations using 'doubles'

	* Adaptative 'MinPoints' values in the TreeDBSCAN across the different
	tree levels. The BackEnds set this value to 3, but this has to be changed
	

2011-12-15 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added 'Timer.cpp' forgotten in last commits

	* Modifications in the TreeDBSCAN backend messages

	* Corrected a bug when printing global/local data on libDistributedClustering

2011-12-13 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Modifications to print same timing information in TreeDBSCAN and
	BurstClustering

2011-12-13 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added sampling support to trace data extraction (parameter '-m' to burst
	clustering binary). That includes a modification on ClusteringAlgorithm
	class which imposes the extension of Classifier class

	* Modification in CGAL building system to avoid search of default paths

	* Added microsecond resolution to Timer class

2011-11-30 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Solved a minor bug to correctly distribute 'draw_hulls' script

2011-11-30 German Llort <german.llort@bsc.es>
	* -frounding-math is used everywhere when using CGAL
	
	* Added GetClusterIDs() method in libDistributedClustering API

	* Added Size() And Flush() methods to HullModel

	* Changed ours CGAL's kernel precision from float to double

	* Moved the generation of output files from the generic ClusteringBackend
	to its derived classes (new virtual method ProcessResults())

	* Tree_DBSCAN_env.sh now updates the PATH variable

	* Added script 'draw_hulls'

	* Added some missing BSC headers and debug messages

2011-11-25 German Llort <german.llort@bsc.es>
	* Modified Makefile to include HullManager in TreeDBSCAN filter.

	* Modified configure.ac.template to include BOOST_LDPATH in
	CGAL_DYNAMIC_PATH.

2011-11-24 German Llort <german.llort@bsc.es>
	* Added a new filter to exchange the global clustering dimensions in 
	TreeDBSCAN

2011-11-24 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added a facade object 'HullModel' to make transparent the 
	'ConvexHullModel' object. *Some memory leaks regarding the 'HullModel'
	container destruction could have been added*

	* Improvement on building system to correctly propagate the library 
	modifications to the 'TreeDBSCAN' source files

	* Solved a bug when compiling without SeqAn support

2011-11-22 German Llort <german.llort@bsc.es>
	* Modified script 'Tree_DBSCAN_env.sh' to set the proper environment

	* Fixed bug in gmp_mpfr.m4 (mpfr_libsdir path was wrong) and 
	configure.ac.template to set the proper libsdir paths

2011-11-22 German Llort <german.llort@bsc.es>
	* Makefiles in TreeDBSCAN changed to generated static binaries

	* Tree_DBSCAN_env.sh now sets the ClusteringSuite libraries directory in
	the LD_LIBRARY_PATH

2011-11-22 German Llort <german.llort@bsc.es>
	* TreeDBSCAN MRNet protocol separated into 3 independent libraries
	for external use (lib*TreeDBSCAN)

	* Serialization and transmission of convex hulls over the MRNet
	centralized in HullManager.cpp

	* Added on-line back-end that extracts data from a tracing library

	* Modified 'clustering-config' script

2011-11-21 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Changed the name of 'sourceme.sh' to 'Tree_DBSCAN_env.sh'

	* Added 'EXTRA_DIST' to 'clustering-config' script

	* Minor version incresed to '2'

2011-11-21 German Llort <german.llort@bsc.es>
	* Added 'clustering-config' script

2011-11-21 German Llort <german.llort@bsc.es>
	* Added 'substitute' and 'substitute-all' scripts

2011-11-21 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added 'TreeDBSCAN' source tree.

	* Erased 'doc' source tree. To be restored in future versions

2011-11-21 German Llort <german.llort@bsc.es>
	* Modified autogen-mn.sh

	* Erased configure.ac and aclocal.m4 

2011-11-21 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added 'TreeDBSCAN' source code that implements a tree version
	approach to parallelize DBSCAN using the MRNet infrastructure

	* Added a CGAL kernel (obtained from the CGAL examples) to include
	density information to CGAL points. The points contained in this
	kernel are still bidimensional. To avoid a problem of CGAL when
	determining the polygon intersection algorithnm this points
	contain a vector of 'float' instead of 'double. That could be a
	potential problem

	* Better use of CGAL flags in the building system. Also added the
	macros to check the presence of 'MRNetApp' library

	* Added 'Code:Blocks' project files


2011-11-14 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Better support for versioning

2011-11-14 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Changed the 'config.h' file to 'clustering_suite_config.h' to 
	better integrate to external tools

	* New modifications on CGAL/MPFR/GMP building system

	* Clusters information file generation feature added to
	'libDistributedClustering'

	* Added compatibility to unified printing of Hull models. It is
	a buggy feature. *It needs to specify a normalized plot definition
	to print the hulls*

2011-09-01 German Llort <german.llort@bsc.es>
	* Added a size method and a new merge implementation on the Convex
	Hull model

	* Changed the way to return the noise points in the 
	libDistributedClustering

2011-08-31 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Solved a bug when the input paraver trace has overlapped states
	running and different from running that made the parser miss data
	from events in the overlapping time

2011-08-10 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Modification of the CGAL detection part of the building system to 
	ease the configuration/compilation

	* New features in 'libDistributedClustering' library so as to refine
	the Tree Based DBSCAN.

	* Also added a consult method to retrieve all information to start the
	cross-process analysis (LLNL)
	

2011-08-05 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Fixed regressions in the implementation of MUSTER interface

	* Fixed bug that prevented to compile 'SequenceScore' due to 
	SeqAn type difinitions

2011-08-04 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Fixed regressions in the implementation of 'libDistributedClustering'

2011-08-03 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Corrected a bug in the building system that prevented to compile
	the CGAL support properly

	* Version renamed to 2.1

2011-07-13 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added clusters merge using last partition sequences on aggregative
	refinement

	* Solved a bug when generating the partition using the sequences merge

	* THIS VERSION WAS USED IN THE ICPADS PAPER *

2011-05-21 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Solved a bug when renaming nodes that didn't expand

2011-05-16 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added copy of input .row files when clustering Paraver traces

	* Changed SVN keywords. Added 'Id'

	* Workaround to parse traces with incoherent number of communicators

	* Build SVN numbering changed again :D

2011-05-16 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Workaround to avoid problematic Bursts when changing HWC groups

	* Generation sequences of the last partition when applying refinement

	* Added better support to control the SVN revision

	* Cleaned headers and SVN keywords for all files

	* Solved a bug in the generation of step traces when applying the
	clustering refinement. It caused that the intermediate trace had a 
	different naming of the clusters

	* Solved a bug when seting the actual number of clusters different to
	noise in a partition. It caused the plotting manager to generate a
	plot with one more cluster that the actual number

2011-05-15 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Solved a bug in the merge step that forced to capture discarded
	leaves

	* Solved a bug when renaming new nodes, that doesn't take in
	consideration those nodes in previous levels that didn't expand

	* Solved a bug when the refinement didn't expand all possible steps
	due to 'convergence', that cause a fault when reconstructing all
	partial traces

2011-05-13 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added two prunes in the last levels of the refinement tree: 
	1) collapse nodes that only expand in themselves and noise, 2) re-classify
	noise points on leaves.

	* Refinement is divided in two classes 'ClusteringRefinementDivisive'
	and 'ClusteringRefinementAggregative'. The first one correspond to
	the implemented top-down approach. The second one is still to be
	implemented and will correspond to a bottom-up approach, merging
	clusters with bad score, to obtain new ones better alligned.

	* ClusterInformation class, that correspond to the nodes in the
	clustering refinement tree, has now its own source files. In the
	previous version, it was part of 'ClusteringRefinement' source files

	* Solved a bug when accounting the number of individuals in the
	ClusteringStatistics class

2011-05-12 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Revision of Clustering Refinement. Now each subclustering is executed
	independently, adding the possibility to be parallelized. It also
	generates 'Graphviz' files to plot the hierarchy tree.

2011-05-03 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Added a new Paraver parser to treat bursts based on events. Now
	there are two different classes to parse 'PRVStatesDataExtractor'
	and 'PRVEventsDataExtractor'. Consequently, a new Paraver trace
	reconstructor has been added 'ClusteredEventsPRVGenerator'

	* First implementation of Clustering Refinement, consisting on a
	divisive (top-down) hierachical application of succesive DBSCAN's,
	evaluated using the Sequence Alignment score. It generates partial
	clusterings information, but has to be changed to clarify the
	outputs, and make different levels independent (to parallelize it)

2011-03-14 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Solved a problem when sorting the clusters to translated the cluster
	IDs in ClusteringStatistics class

	* Solved a problem when generating plots just with NOISE cluster

	* Solved a bug to correctly apply the clustering parameters factors

	* Solved a bug to correctly generate the revision number in the 
	configure.ac file

2011-03-10 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Added the implementation to manage the distributed tree DBSCAN in
	collaboration with German Llort, using an MRNet. This implies adding 
	a dependency to CGAL (and also MPFR and Boost Threads) to compute the
	Convex Hulls models of each cluster, and also manipulate them.

	* Added initial support to SeqAn library, to implement the sequence based
	clustering refinement.

	* Added a new binary target called 'DBSCANParametersApproximation' to
	offer the functionality of generate the K-Neighbours plot, in order to
	approximate the 'Epsilon' value.

	* Changed the building system so as to permit a simple compilation to
	generate the basic BurstClustering binary (and also the
	 DBSCANParametersApproximation binary), no needing all dependencies.

2011-01-04 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Added support to 'muster' clustering library, both sequential an parallel
	algorithms. Requires the library to be installed on the system plus
	the Boost headers and a MPI implementation, in case you want to use
	the Capek algorithm (k-medoids distributed clustering).

	* Full implementation of distributed clustering under
	'src/libDistributedClustering', to perform the tree DBSCAN. Functional, but
	not cleaned. It uses a set of Convex Hull models of the resulting clusters and
	a classifier using these hulls. It still lacks on the classification of points
	in the Eps neigbourhood (just classifies the inner and border points). This
	modifications requires both CGAL (and its dependencies like MPFR and Boost
	thread libraries).

	* Solved issues ralated to the clusters time-based rank (bad implemented in
	previous version).

	* Restructuration of shared components. Now libTraceClustering just includes
	the public face and the implementation, and the rest of classes are in
	libSharedComponents, so as to easily access from libDistributedClustering.

	* Full rewriting of the autotools building system. Now it works in MareNostrum
	without problems. It allows to set manually the dependencies, and correctly
	distribute the different flags across all the Makefiles.

	* Minor regressions solved: plots titles, headers instdir solved, 'include'
	directory Makefile.am added.


2010-10-26 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Added support to set the plots range via XML

	* Solved a bug when trying to plot normalized data plots

2010-10-25 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Global modification and restructuration of source directories

	* Current functionality is closer to the original burst-clusterizer

	* Some regresions needs to be solved
	
	* .anjuta_sym_db.db Added to keep the Anjuta symbol database

2010-10-05 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Initial submit to BSC subversion. Previous updates are
	located in 'burst-clusterizer' tool
