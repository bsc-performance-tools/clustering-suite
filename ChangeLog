ChangeLog 'ClusteringSuite'

YYYY-MM-DD  John Doe  <johndoe@example.com>

	* myfile.ext (myfunction): my changes made
	additional changes

	* myfile.ext (unrelated_change): my changes made
	to myfile.ext but completely unrelated to the above

	* anotherfile.ext (somefunction): more changes

2011-05-16 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added copy of input .row files when clustering Paraver traces

	* Changed SVN keywords. Added 'Id'

	* Workaround to parse traces with incoherent number of communicators

	* Build SVN numbering changed again :D

2011-05-16 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Workaround to avoid problematic Bursts when changing HWC groups

	* Generation sequences of the last partition when applying refinement

	* Added better support to control the SVN revision

	* Cleaned headers and SVN keywords for all files

	* Solved a bug in the generation of step traces when applying the
	clustering refinement. It caused that the intermediate trace had a 
	different naming of the clusters

	* Solved a bug when seting the actual number of clusters different to
	noise in a partition. It caused the plotting manager to generate a
	plot with one more cluster that the actual number

2011-05-15 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Solved a bug in the merge step that forced to capture discarded
	leaves

	* Solved a bug when renaming new nodes, that doesn't take in
	consideration those nodes in previous levels that didn't expand

	* Solved a bug when the refinement didn't expand all possible steps
	due to 'convergence', that cause a fault when reconstructing all
	partial traces

2011-05-13 Juan Gonzalez <juan.gonzalez@bsc.es>
	* Added two prunes in the last levels of the refinement tree: 
	1) collapse nodes that only expand in themselves and noise, 2) re-classify
	noise points on leaves.

	* Refinement is divided in two classes 'ClusteringRefinementDivisive'
	and 'ClusteringRefinementAggregative'. The first one correspond to
	the implemented top-down approach. The second one is still to be
	implemented and will correspond to a bottom-up approach, merging
	clusters with bad score, to obtain new ones better alligned.

	* ClusterInformation class, that correspond to the nodes in the
	clustering refinement tree, has now its own source files. In the
	previous version, it was part of 'ClusteringRefinement' source files

	* Solved a bug when accounting the number of individuals in the
	ClusteringStatistics class

2011-05-12 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Revision of Clustering Refinement. Now each subclustering is executed
	independently, adding the possibility to be parallelized. It also
	generates 'Graphviz' files to plot the hierarchy tree.

2011-05-03 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Added a new Paraver parser to treat bursts based on events. Now
	there are two different classes to parse 'PRVStatesDataExtractor'
	and 'PRVEventsDataExtractor'. Consequently, a new Paraver trace
	reconstructor has been added 'ClusteredEventsPRVGenerator'

	* First implementation of Clustering Refinement, consisting on a
	divisive (top-down) hierachical application of succesive DBSCAN's,
	evaluated using the Sequence Alignment score. It generates partial
	clusterings information, but has to be changed to clarify the
	outputs, and make different levels independent (to parallelize it)

2011-03-14 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Solved a problem when sorting the clusters to translated the cluster
	IDs in ClusteringStatistics class

	* Solved a problem when generating plots just with NOISE cluster

	* Solved a bug to correctly apply the clustering parameters factors

	* Solved a bug to correctly generate the revision number in the 
	configure.ac file

2011-03-10 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Added the implementation to manage the distributed tree DBSCAN in
	collaboration with German Llort, using an MRNet. This implies adding 
	a dependency to CGAL (and also MPFR and Boost Threads) to compute the
	Convex Hulls models of each cluster, and also manipulate them.

	* Added initial support to SeqAn library, to implement the sequence based
	clustering refinement.

	* Added a new binary target called 'DBSCANParametersApproximation' to
	offer the functionality of generate the K-Neighbours plot, in order to
	approximate the 'Epsilon' value.

	* Changed the building system so as to permit a simple compilation to
	generate the basic BurstClustering binary (and also the
	 DBSCANParametersApproximation binary), no needing all dependencies.

2011-01-04 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Added support to 'muster' clustering library, both sequential an parallel
	algorithms. Requires the library to be installed on the system plus
	the Boost headers and a MPI implementation, in case you want to use
	the Capek algorithm (k-medoids distributed clustering).

	* Full implementation of distributed clustering under
	'src/libDistributedClustering', to perform the tree DBSCAN. Functional, but
	not cleaned. It uses a set of Convex Hull models of the resulting clusters and
	a classifier using these hulls. It still lacks on the classification of points
	in the Eps neigbourhood (just classifies the inner and border points). This
	modifications requires both CGAL (and its dependencies like MPFR and Boost
	thread libraries).

	* Solved issues ralated to the clusters time-based rank (bad implemented in
	previous version).

	* Restructuration of shared components. Now libTraceClustering just includes
	the public face and the implementation, and the rest of classes are in
	libSharedComponents, so as to easily access from libDistributedClustering.

	* Full rewriting of the autotools building system. Now it works in MareNostrum
	without problems. It allows to set manually the dependencies, and correctly
	distribute the different flags across all the Makefiles.

	* Minor regressions solved: plots titles, headers instdir solved, 'include'
	directory Makefile.am added.


2010-10-26 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Added support to set the plots range via XML

	* Solved a bug when trying to plot normalized data plots

2010-10-25 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Global modification and restructuration of source directories

	* Current functionality is closer to the original burst-clusterizer

	* Some regresions needs to be solved
	
	* .anjuta_sym_db.db Added to keep the Anjuta symbol database

2010-10-05 Juan Gonzalez <juan.gonzalez@bsc.es>

	* Initial submit to BSC subversion. Previous updates are
	located in 'burst-clusterizer' tool
